package com.system;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;


public class Hotel {

	public void reserveRoom(Connection connection, Scanner scanner) {
		try {
            System.out.print("Enter guest name: ");
            String guestName = scanner.next();
            scanner.nextLine();
            System.out.print("Enter room number: ");
            int roomNumber = scanner.nextInt();
            System.out.print("Enter contact number: ");
            String contactNumber = scanner.next();

            String query = "INSERT INTO reservations (guest_name, room_number, contact_number) VALUES (?,?,?)";

            try (PreparedStatement preStatement = connection.prepareStatement(query)) {
                
            	preStatement.setString(1, guestName);
            	preStatement.setInt(2, roomNumber);
            	preStatement.setString(3, contactNumber);            	
            	
            	int affectedRows = preStatement.executeUpdate();

                if (affectedRows > 0) {
                    System.out.println("Reservation successful!");
                } else {
                    System.out.println("Reservation failed.");
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
	}

	public void viewReservations(Connection connection) throws SQLException {
		String query = "SELECT * FROM reservations";

        try (PreparedStatement preStatement = connection.prepareStatement(query);
             ResultSet resultSet = preStatement.executeQuery()) {

            System.out.println("Current Reservations:");
            System.out.println("+----------------+-----------------+---------------+----------------------+-------------------------+");
            System.out.println("| Reservation ID | Guest           | Room Number   | Contact Number       | Reservation Date        |");
            System.out.println("+----------------+-----------------+---------------+----------------------+-------------------------+");

            while (resultSet.next()) {
                int reservationId = resultSet.getInt("reservation_id");
                String guestName = resultSet.getString("guest_name");
                int roomNumber = resultSet.getInt("room_number");
                String contactNumber = resultSet.getString("contact_number");
                String reservationDate = resultSet.getTimestamp("reservation_date").toString();

                // Format and display the reservation data in a table-like format
                System.out.printf("| %-14d | %-15s | %-13d | %-20s | %-19s   |\n",
                        reservationId, guestName, roomNumber, contactNumber, reservationDate);
            }

            System.out.println("+----------------+-----------------+---------------+----------------------+-------------------------+");
        }
	}

	public void getRoomNumber(Connection connection, Scanner scanner) {
		try {
            System.out.print("Enter reservation ID: ");
            int reservationId = scanner.nextInt();
            System.out.print("Enter guest name: ");
            String guestName = scanner.next();

            String query = "SELECT room_number FROM reservations WHERE reservation_id = ? AND guest_name = ?";

            try (PreparedStatement preStatement = connection.prepareStatement(query)) {
            	preStatement.setInt(1, reservationId);
            	preStatement.setString(2, guestName);
            	
            	
                ResultSet resultSet = preStatement.executeQuery();
                if (resultSet.next()) {
                    int roomNumber = resultSet.getInt("room_number");
                    System.out.println("Room number for Reservation ID " + reservationId +
                            " and Guest " + guestName + " is: " + roomNumber);
                } else {
                    System.out.println("Reservation not found for the given ID and guest name.");
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
	}

	public void updateReservation(Connection connection, Scanner scanner) {
		// TODO Auto-generated method stub
		
	}

	public void deleteReservation(Connection connection, Scanner scanner) {
		// TODO Auto-generated method stub
		
	}

}
